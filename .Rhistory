alpha =.1
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
alpha=.01
alpha =.05
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
alpha
w2=0
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2=0
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
w2 = w2-alpha * (24*w2-7.714); w2
(2/25)*(50/7)
p = 1/3; 1-(p)^2-(1-p)^2
p = 1/4; 1-(p)^2-(1-p)^2
p = 1/3; 1-(p)^2-(1-p)^2
(4/7)*0.375 + (3/7)*(0.444)
p = 3/7; 1-(p)^2-(1-p)^2
4/7
i
i = function(p){1-p^2-(1-p)^2}
i(3/7)
i(1/4)
i(1/3)
0.489-0.57*0.375-0.43*0.444
log(2,2)
log(4,2)
log(8,2)
i1 = function(p){-log(p,2)-log(1-p,2)}
0.489-0.57*i1(1/4)-0.43*i1(1/3)
i1(3/7)-0.57*i1(1/4)-0.43*i1(1/3)
7/12
i1 = function(p){-p*log(p,2)-(1-p)*log(1-p,2)}
i1(3/7)-0.57*i1(1/4)-0.43*i1(1/3)
i1(1/3)
i1(1/4)
i1(3/7)
i1(1/7)
i1(1)
i1(1/2)
i1(3/7)
(3/7)* log(3/7,2) â€“ (4/7)* log(4/7,2)
(3/7)* log(3/7,2) - (4/7)* log(4/7,2)
(3/7)* log(3/7,2)+ (4/7)* log(4/7,2)
Passenger = c(1:10)
d
setwd("C:/Users/SON/Dropbox/git/capstone")
library(ggplot2)
library(purrr)
# one time playing
# Plot money vs times of playing
bett1 = function(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
{
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
for (i in 1:times)
{
win = rbernoulli(1, 1/(odd+1))
if (win){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
return(amount_series)
}
bett1n = function(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
{
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
win = rbernoulli(times, 1/(odd+1))
for (i in 1:times)
{
if (win[i]){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
return(amount_series)
}
# When running out of money?
bett2 = function(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
{
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
for (i in 1:times)
{
win = rbernoulli(1, 1/(odd+1))
if (win){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
if (amount_series[i+1]<0) break
}
return(amount_series)
}
# Long term Outcome
# Expected Amount
# Plot money vs times of playing
bett_lt = function(no.simu =  1000, original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
{
amount_series_lt = matrix(0, ncol = no.simu, nrow = (times +1))
for (i in 1:no.simu)
{
amount_series_lt[,i] = bett1n(original_amount=original_amount, times=times, bet=bet, payout=payout, odd=odd, m =m)
}
amount_series_lt_expected = apply(amount_series_lt,1, mean)
return(amount_series_lt_expected)
}
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
original_amount=1000
times=50
bet=10
payout=35
odd=37
m =2
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
win = rbernoulli(times, 1/(odd+1))
for (i in 1:times)
{
if (win[i]){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
original_amount=1000
times=50
bet=10
payout=35
odd=37
m =2
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
win = rbernoulli(times, 1/(odd+1))
for (i in 1:times)
{
if (win[i]){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
original_amount=1000
times=50
bet=10
payout=35
odd=37
m =2
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
win = rbernoulli(times, 1/(odd+1))
for (i in 1:times)
{
if (win[i]){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x
win
sum(win)
which.max(win)
930-80
850-160
690-320
370-640
if(win[10]){print('hahaha')}
if(win[13]){print('hahaha')}
x = amount_series
qplot(c(1:length(x)), x, xlab = 'Number of Plays')
original_amount=1000
times=50
bet=10
payout=35
odd=37
m =2
amount_series = c()
amount_series[1] = original_amount
new_bet = bet
win = rbernoulli(times, 1/(odd+1))
for (i in 1:times)
{
if (win[i]){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
x = amount_series
qplot(c(1:length(x)), x, xlab = 'Number of Plays')
x
win
sum(win)
which(win==TRUE)
for (i in 1:times)
{
if (win[i]){
print('winwinwinwin')
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
print('loseloseloseolsolsoe')
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
qplot(c(1:length(x)), x, xlab = 'Number of Plays')
for (i in 1:times)
{
if (win[i]){
print(i)
print('winwinwinwin')
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
print(i)
print('loseloseloseolsolsoe')
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
for (i in 1:times)
{
if (win[i]){
amount_series[i+1] = amount_series[i] + (payout)*new_bet
new_bet = bet
}
else {
print(new_bet)
amount_series[i+1] = amount_series[i] - new_bet
new_bet = m*new_bet
}
}
x
1000+9230
2^10
2^10-1
1000-10*(2^10-1)+2^10*10*35
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=1000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett1n(original_amount=1000, times=10000, bet=10, payout=35, odd=37, m =2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays'))
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1000, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1000, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1000, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1000, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
x = bett_lt(no.simu =  1000000, original_amount=1000, times=1000, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab = 'Number of Plays')
knitr::opts_chunk$set(echo = TRUE)
x = bett1n(original_amount=1000, times=50, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
x = bett1n(original_amount=1000, times=100, bet=10, payout=35, odd=37, m=2)
qplot(c(1:length(x)),x, xlab='Number of Plays')
install.packages("Hmisc")
infile<-read_csv("ModelFileV4.csv")
df<-data.frame(infile)%>%
select(-c(Cohort, First, Last, TargetGPA, ID, GPA, major, sat, College, race))%>%
drop_na
library(tidyverse)
infile<-read_csv("ModelFileV4.csv")
df<-data.frame(infile)%>%
select(-c(Cohort, First, Last, TargetGPA, ID, GPA, major, sat, College, race))%>%
drop_na
setwd("C:/Users/SON/Dropbox/git/capstone")
infile<-read_csv("ModelFileV4.csv")
df<-data.frame(infile)%>%
select(-c(Cohort, First, Last, TargetGPA, ID, GPA, major, sat, College, race))%>%
drop_na
library(caret)
library(rpart)
library(rattle)
library(ggplot2)
library(haven)
library(gganimate)
library(Hmisc)
library(tidyverse)
setwd("C:/Users/SON/Dropbox/git/capstone")
infile<-read_csv("ModelFileV4.csv")
df<-data.frame(infile)%>%
select(-c(Cohort, First, Last, TargetGPA, ID, GPA, major, sat, College, race))%>%
drop_na
df$target <- factor(df$Target10p)
df<-df%>%
select
t(-c(Target10p))%>%
# mutate(race=recode(race, '6 Pacific Isl'='Other', '5 NativeAm'='Other','9 Unkn US'='Other'))%>%
filter(degree!="a NDG, UG")%>%
filter(midtermgpa!="#N/A")%>%
mutate(midtermgpa=as.numeric(midtermgpa))%>%
mutate(MathClass=recode(MathClass,'E201'='201','226'='Other','350'='Other','122'='Other', '223'='Other'))%>%
mutate(MathProf=recode(MathProf, "Salzillo"="Salzillo & Olinsky & Lamere & Toce", "Olinsky"="Salzillo & Olinsky & Lamere & Toce", "Lamere"="Salzillo & Olinsky & Lamere & Toce", "Toce"="Salzillo & Olinsky & Lamere & Toce"))
library(caret)
library(rpart)
library(rattle)
library(ggplot2)
library(haven)
library(gganimate)
library(Hmisc)
library(tidyverse)
setwd("C:/Users/SON/Dropbox/git/capstone")
infile<-read_csv("ModelFileV4.csv")
df<-data.frame(infile)%>%
select(-c(Cohort, First, Last, TargetGPA, ID, GPA, major, sat, College, race))%>%
drop_na
df$target <- factor(df$Target10p)
df
str(df)
df<-df%>%
select t(-c(Target10p))%>%
t(-c(Target10p))
sum(Ã­.na(df))
sum(is.na(df))
table(df$MathProf)
splitIndex <- createDataPartition(df$target, p = .70, list = FALSE)
train <- df[ splitIndex,]
test <- df[-splitIndex,]
train0 = train[train$target == '0',]
train1 = train[train$target == '1',]
n0 = nrow(train0)
n1 = nrow(train1)
train00 = train0[sample(1:n0, n1),]
train_under = rbind(train00, train1)
modelranger <- train(target~.,data =train_under, method = "ranger")
predranger=predict(modelranger,test)
str(train_under)
str(test)
table(train$target)
table(train_under$target)
table(test$target)
table(train$hn)
table(test$hn)
table(train_under$hn)
